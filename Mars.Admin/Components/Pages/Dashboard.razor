@page "/dashboard"
@using Mars.Admin.Services
@using Mars.Admin.Data
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using Mars.Admin.Components.Shared
@inject IUserScope UserScope
@inject ApplicationDbContext DbContext
@attribute [Authorize]

<PageTitle>Dashboard</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h2>Dashboard</h2>
            <p class="text-muted">Welcome to your admin dashboard</p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Your Permissions</h5>
                </div>
                <div class="card-body">
                    @if (isLoadingPermissions)
                    {
                        <div class="text-center">
                            <div class="spinner-border spinner-border-sm" role="status">
                                <span class="visually-hidden">Loading permissions...</span>
                            </div>
                            <p class="text-muted mt-2">Loading your permissions...</p>
                        </div>
                    }
                    else if (UserScope.IsSuperAdmin)
                    {
                        <div class="alert alert-primary">
                            <i class="bi bi-award"></i> <strong>Super Administrator</strong><br>
                            You have full access to all system features.
                        </div>
                    }
                    else
                    {
                        @if (userPermissions.Any())
                        {
                            <div class="list-group">
                                @foreach (var permission in userPermissions)
                                {
                                    <div class="list-group-item d-flex justify-content-between align-items-center">
                                        @permission
                                        <span class="badge bg-success">Granted</span>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-warning">
                                <i class="bi bi-exclamation-triangle"></i> No permissions assigned to your roles.
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Website Access</h5>
                </div>
                <div class="card-body">
                    @if (isLoadingWebsites)
                    {
                        <div class="text-center">
                            <div class="spinner-border spinner-border-sm" role="status">
                                <span class="visually-hidden">Loading websites...</span>
                            </div>
                            <p class="text-muted mt-2">Loading your website access...</p>
                        </div>
                    }
                    else if (UserScope.IsSuperAdmin)
                    {
                        <div class="alert alert-primary">
                            <i class="bi bi-award"></i> <strong>Super Administrator</strong><br>
                            You have access to all websites in the system.
                        </div>
                    }
                    else if (userWebsites.Count == 0)
                    {
                        <div class="alert alert-warning">
                            <i class="bi bi-exclamation-triangle"></i> No website access granted.
                            <br><small class="text-muted">Contact your administrator to assign website access.</small>
                        </div>
                    }
                    else
                    {
                        <div class="list-group">
                            @foreach (var website in userWebsites)
                            {
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <strong>@website.Code</strong>
                                        <br><small class="text-muted">@website.Name</small>
                                    </div>
                                    <span class="badge bg-primary">Access Granted</span>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- User Alert System for SuperAdmins -->
    <UserAlertCard @ref="userAlertCard" />

    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Quick Actions</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        @if (UserScope.HasPermission("User.Read"))
                        {
                            <div class="col-md-3 mb-3">
                                <a href="/admin/users" class="btn btn-outline-primary w-100">
                                    <i class="bi bi-people"></i><br>
                                    Manage Users
                                </a>
                            </div>
                        }
                        @if (UserScope.HasPermission("Role.Read"))
                        {
                            <div class="col-md-3 mb-3">
                                <a href="/admin/roles" class="btn btn-outline-secondary w-100">
                                    <i class="bi bi-person-badge"></i><br>
                                    Manage Roles
                                </a>
                            </div>
                        }
            @if (UserScope.HasPermission("Permission.Read"))
            {
                <div class="col-md-3 mb-3">
                    <a href="/admin/permissions" class="btn btn-outline-warning w-100">
                        <i class="bi bi-shield-lock"></i><br>
                        Manage Permissions
                    </a>
                </div>
            }
            @if (UserScope.HasPermission("Website.Read"))
            {
                <div class="col-md-3 mb-3">
                    <a href="/admin/websites" class="btn btn-outline-info w-100">
                        <i class="bi bi-globe"></i><br>
                        Manage Websites
                    </a>
                </div>
            }
                        @if (UserScope.HasPermission("IPSafeListing.Read"))
                        {
                            <div class="col-md-3 mb-3">
                                <a href="/admin/ip-safe-listing" class="btn btn-outline-info w-100">
                                    <i class="bi bi-shield-check"></i><br>
                                    IP Safe Listing
                                </a>
                            </div>
                        }
                        @if (UserScope.HasPermission("Quotes.Read"))
                        {
                            <div class="col-md-3 mb-3">
                                <a href="/quotes" class="btn btn-outline-success w-100">
                                    <i class="bi bi-file-text"></i><br>
                                    View Quotes
                                </a>
                            </div>
                        }
                        @if (UserScope.HasPermission("Policies.Read"))
                        {
                            <div class="col-md-3 mb-3">
                                <a href="/policies" class="btn btn-outline-dark w-100">
                                    <i class="bi bi-file-earmark-text"></i><br>
                                    View Policies
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<string> userPermissions = new();
    private List<WebsiteInfo> userWebsites = new();
    private bool isLoadingPermissions = true;
    private bool isLoadingWebsites = true;
    private UserAlertCard? userAlertCard;

    protected override async Task OnInitializedAsync()
    {
        await LoadUserPermissions();
        await LoadUserWebsites();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && userAlertCard != null)
        {
            await userAlertCard.ForceRefresh();
        }
    }

    private async Task LoadUserPermissions()
    {
        try
        {
            isLoadingPermissions = true;
            userPermissions.Clear();

            if (UserScope.IsSuperAdmin)
            {
                // Super admin doesn't need to load permissions - they have access to everything
                userPermissions.Clear();
            }
            else
            {
                // Load permissions from user's roles
                var userId = UserScope.UserId;
                if (!string.IsNullOrEmpty(userId))
                {
                    userPermissions = await DbContext.UserRolePermissions
                        .Include(urp => urp.Permission)
                        .Include(urp => urp.UserRole)
                        .Where(urp => urp.UserRole.Users.Any(u => u.Id == userId) 
                                   && urp.IsActive 
                                   && urp.IsGranted
                                   && urp.Permission.IsActive)
                        .Select(urp => urp.Permission.Name)
                        .Distinct()
                        .OrderBy(p => p)
                        .ToListAsync();
                }
            }
        }
        catch
        {
            // Fallback to hardcoded permissions if database query fails
            userPermissions = GetFallbackPermissions();
        }
        finally
        {
            isLoadingPermissions = false;
        }
    }

    private async Task LoadUserWebsites()
    {
        try
        {
            isLoadingWebsites = true;
            userWebsites.Clear();

            if (UserScope.IsSuperAdmin)
            {
                // Super admin has access to all websites
                userWebsites = await DbContext.Websites
                    .Where(w => w.IsActive)
                    .Select(w => new WebsiteInfo
                    {
                        Id = w.Id,
                        Code = w.Code,
                        Name = w.Name,
                        Url = w.Url
                    })
                    .OrderBy(w => w.Code)
                    .ToListAsync();
            }
            else
            {
                // Load websites from user's website access
                var userId = UserScope.UserId;
                if (!string.IsNullOrEmpty(userId))
                {
                    userWebsites = await DbContext.UserWebsiteAccesses
                        .Include(uwa => uwa.Website)
                        .Where(uwa => uwa.UserId == userId 
                                   && uwa.IsActive 
                                   && uwa.IsGranted
                                   && uwa.Website.IsActive)
                        .Select(uwa => new WebsiteInfo
                        {
                            Id = uwa.Website.Id,
                            Code = uwa.Website.Code,
                            Name = uwa.Website.Name,
                            Url = uwa.Website.Url
                        })
                        .OrderBy(w => w.Code)
                        .ToListAsync();
                }
            }
        }
        catch (Exception ex)
        {
            // Log error but don't crash the page
            Console.WriteLine($"Error loading user websites: {ex.Message}");
        }
        finally
        {
            isLoadingWebsites = false;
        }
    }

    private List<string> GetFallbackPermissions()
    {
        var permissions = new List<string>();
        
        if (UserScope.HasPermission("User.Create")) permissions.Add("User.Create");
        if (UserScope.HasPermission("User.Read")) permissions.Add("User.Read");
        if (UserScope.HasPermission("User.Update")) permissions.Add("User.Update");
        if (UserScope.HasPermission("User.Delete")) permissions.Add("User.Delete");
        if (UserScope.HasPermission("Quotes.Read")) permissions.Add("Quotes.Read");
        if (UserScope.HasPermission("Policies.Read")) permissions.Add("Policies.Read");
        
        return permissions;
    }
}
